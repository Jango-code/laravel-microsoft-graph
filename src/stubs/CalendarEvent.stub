<?php

namespace App\Mail;

use Carbon\Carbon;
use Illuminate\Bus\Queueable;
use Illuminate\Mail\Mailables\Address;
use Illuminate\Mail\Mailables\Content;
use Illuminate\Queue\SerializesModels;
use PrasadChinwal\MicrosoftGraph\Calendar\Event\CalendarEvent;
use PrasadChinwal\MicrosoftGraph\Calendar\Event\Eventable\Attendee;
use PrasadChinwal\MicrosoftGraph\Calendar\Event\Eventable\Enums\DayOfWeek;
use PrasadChinwal\MicrosoftGraph\Calendar\Event\Eventable\Enums\RecurrenceType;
use PrasadChinwal\MicrosoftGraph\Calendar\Event\Eventable\Enums\RecurrenceTypeRange;
use PrasadChinwal\MicrosoftGraph\Calendar\Event\Eventable\Recurrence;
use PrasadChinwal\MicrosoftGraph\Calendar\Event\Eventable\RecurrencePattern;
use PrasadChinwal\MicrosoftGraph\Calendar\Event\Eventable\RecurrenceRange;

class DummyClass extends CalendarEvent
{
    use Queueable, SerializesModels;

    /**
     * Create a new message instance.
     *
     * @return void
     */
    public function __construct()
    {
        //
    }

    /**
     * Get the message envelope.
     *
     * @return \PrasadChinwal\MicrosoftGraph\Calendar\Event\Eventable\Envelope
     */
    public function envelope(): \PrasadChinwal\MicrosoftGraph\Calendar\Event\Eventable\Envelope
    {
        return new \PrasadChinwal\MicrosoftGraph\Calendar\Event\Eventable\Envelope(
            new Address('from@abc.com'),
            'Subject',
            [new Attendee('xyz@zzz.com')],
            Carbon::now()->addDay(), Carbon::now()->addDay()->addHour(),
            recurrence: new Recurrence(
                new RecurrencePattern(
                    RecurrenceType::WEEKLY, dayOfWeek: [DayOfWeek::MONDAY, DayOfWeek::WEDNESDAY],
                    interval: 1,
                ),
                new RecurrenceRange(
                    RecurrenceTypeRange::END_DATE,
                    Carbon::now()->addDay(), Carbon::now()->addMonths(1)
                ),
            )
        );
    }

    /**
     * Get the message content definition.
     *
     * @return \Illuminate\Mail\Mailables\Content
     */
    public function content()
    {
        return new Content(
            markdown: 'emails.test-mail',
        );
    }

    /**
     * Get the attachments for the message.
     *
     * @return array
     */
    public function attachments()
    {
        return [];
    }
}
